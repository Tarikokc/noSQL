# input {
#   file {
#     path => "/data/apache_logs.txt"
#     start_position => "beginning"
#     sincedb_path => "/dev/null"
#   }
# }

# filter {
#   grok {
#     match => { "message" => "%{COMBINEDAPACHELOG}" }
#   }
#   date {
#     match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
#     target => "@timestamp"
#     remove_field => "timestamp"
#   }
#   geoip {
#     source => "clientip"
#   }
# }

# output {
#   elasticsearch {
#     hosts => ["elasticsearch:9200"]
#     index => "web_server_logs"
#   }
# }

input {
  beats {
    port => 5044
    type => "python"  # Définit le type pour Beats
  }
  file {
    path => "/data/apache_logs.txt"
    start_position => "beginning"
    sincedb_path => "/dev/null"
    type => "apache"  # Définit le type pour File
  }
}

filter {
  if [type] == "python" {
    json {
      source => "message"
      target => "log"
    }
  } else if [type] == "apache" {
    grok {
      match => { "message" => "%{COMBINEDAPACHELOG}" }
    }
    date {
      match => [ "timestamp", "dd/MMM/yyyy:HH:mm:ss Z" ]
      target => "@timestamp"
      remove_field => "timestamp"
    }
    geoip {
      source => "clientip"
    }
  }
}

output {
  if [type] == "python" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "python-logs"
    }
    stdout {
      codec => rubydebug
    }
  } else if [type] == "apache" {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      index => "web_server_logs"
    }
  }
}